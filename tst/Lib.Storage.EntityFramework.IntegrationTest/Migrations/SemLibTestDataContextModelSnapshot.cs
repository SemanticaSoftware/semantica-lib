// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Semantica.Lib.Tests.Storage.EntityFramework.Test.Implementation;

namespace Com.Semantica.Lib.Tests.Storage.EntityFramework.Test.Migrations
{
    [DbContext(typeof(SemLibTestDataContext))]
    partial class SemLibTestDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.ComplexTypes.ValueType", b =>
                {
                    b.Property<string>("ValueTypeProp")
                        .ValueGeneratedOnAdd();

                    b.HasKey("ValueTypeProp");

                    b.ToTable("ValueType");
                });

            modelBuilder.Entity("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.Tables.Root", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImmutableProp")
                        .HasMaxLength(64);

                    b.Property<string>("NotMappedProp");

                    b.Property<string>("Prop")
                        .HasMaxLength(64);

                    b.Property<string>("ValuesValueTypeProp");

                    b.HasKey("Id");

                    b.HasIndex("ValuesValueTypeProp");

                    b.ToTable("Root");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImmutableProp = "ImmutableProp-1",
                            NotMappedProp = "AS",
                            Prop = "Prop-1"
                        },
                        new
                        {
                            Id = 2,
                            ImmutableProp = "ImmutableProp-2",
                            NotMappedProp = "DASAS",
                            Prop = "Prop-2"
                        });
                });

            modelBuilder.Entity("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.Tables.SimpleDependent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DependentProp");

                    b.Property<int>("RootId");

                    b.HasKey("Id");

                    b.HasIndex("RootId");

                    b.ToTable("SimpleDependent");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DependentProp = true,
                            RootId = 1
                        },
                        new
                        {
                            Id = 2,
                            DependentProp = false,
                            RootId = 2
                        },
                        new
                        {
                            Id = 3,
                            DependentProp = true,
                            RootId = 2
                        });
                });

            modelBuilder.Entity("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.Tables.Root", b =>
                {
                    b.HasOne("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.ComplexTypes.ValueType", "Values")
                        .WithMany()
                        .HasForeignKey("ValuesValueTypeProp");
                });

            modelBuilder.Entity("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.Tables.SimpleDependent", b =>
                {
                    b.HasOne("Com.Semantica.Tests.Lib.Data.IntegrationTest.Storage.Tables.Root", "Root")
                        .WithMany("SimpleDependents")
                        .HasForeignKey("RootId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
